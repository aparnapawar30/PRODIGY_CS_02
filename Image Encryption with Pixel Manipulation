from PIL import Image
import random

def encrypt_decrypt_image(image_path, key, mode='encrypt'):
    # Open the image
    image = Image.open(image_path)
    pixels = image.load()
    width, height = image.size

    # Initialize the random number generator with the provided key
    random.seed(key)

    for x in range(width):
        for y in range(height):
            r, g, b = pixels[x, y]
            # Generate a random offset
            offset = random.randint(0, 255)
            if mode == 'encrypt':
                # Encrypt: add the offset to each color channel
                r, g, b = (r + offset) % 256, (g + offset) % 256, (b + offset) % 256
            elif mode == 'decrypt':
                # Decrypt: subtract the offset from each color channel
                r, g, b = (r - offset) % 256, (g - offset) % 256, (b - offset) % 256
            pixels[x, y] = (r, g, b)

    # Save the modified image with an appropriate name
    output_image_path = f"{mode}ed_" + image_path.split('/')[-1]
    image.save(output_image_path)
    return output_image_path

# Example usage
key = 12345  # The encryption key
encrypted_image_path = encrypt_decrypt_image("example.jpg", key, mode='encrypt')
decrypted_image_path = encrypt_decrypt_image(encrypted_image_path, key, mode='decrypt')

